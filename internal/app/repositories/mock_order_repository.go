// Code generated by MockGen. DO NOT EDIT.
// Source: .\internal\app\repositories\order_repository.go

// Package repositories is a generated GoMock package.
package repositories

import (
	models "hb-campaign/internal/app/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOrderRepositoryI is a mock of OrderRepositoryI interface.
type MockOrderRepositoryI struct {
	ctrl     *gomock.Controller
	recorder *MockOrderRepositoryIMockRecorder
}

// MockOrderRepositoryIMockRecorder is the mock recorder for MockOrderRepositoryI.
type MockOrderRepositoryIMockRecorder struct {
	mock *MockOrderRepositoryI
}

// NewMockOrderRepositoryI creates a new mock instance.
func NewMockOrderRepositoryI(ctrl *gomock.Controller) *MockOrderRepositoryI {
	mock := &MockOrderRepositoryI{ctrl: ctrl}
	mock.recorder = &MockOrderRepositoryIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderRepositoryI) EXPECT() *MockOrderRepositoryIMockRecorder {
	return m.recorder
}

// CreateOrder mocks base method.
func (m *MockOrderRepositoryI) CreateOrder(cc models.CreateOrderDTO) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", cc)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrder indicates an expected call of CreateOrder.
func (mr *MockOrderRepositoryIMockRecorder) CreateOrder(cc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockOrderRepositoryI)(nil).CreateOrder), cc)
}
