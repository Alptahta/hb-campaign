// Code generated by MockGen. DO NOT EDIT.
// Source: .\internal\app\services\order_service.go

// Package services is a generated GoMock package.
package services

import (
	models "hb-campaign/internal/app/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOrderServiceI is a mock of OrderServiceI interface.
type MockOrderServiceI struct {
	ctrl     *gomock.Controller
	recorder *MockOrderServiceIMockRecorder
}

// MockOrderServiceIMockRecorder is the mock recorder for MockOrderServiceI.
type MockOrderServiceIMockRecorder struct {
	mock *MockOrderServiceI
}

// NewMockOrderServiceI creates a new mock instance.
func NewMockOrderServiceI(ctrl *gomock.Controller) *MockOrderServiceI {
	mock := &MockOrderServiceI{ctrl: ctrl}
	mock.recorder = &MockOrderServiceIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderServiceI) EXPECT() *MockOrderServiceIMockRecorder {
	return m.recorder
}

// CreateOrder mocks base method.
func (m *MockOrderServiceI) CreateOrder(co models.CreateOrderRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", co)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrder indicates an expected call of CreateOrder.
func (mr *MockOrderServiceIMockRecorder) CreateOrder(co interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockOrderServiceI)(nil).CreateOrder), co)
}
